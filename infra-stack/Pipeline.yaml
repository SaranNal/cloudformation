AWSTemplateFormatVersion: "2010-09-09"
Description: This stack is for creating Pipeline.
Parameters:
  ProjectName:
    Type: String
  Environment:
    Type: String
  CodeStarConnectionID:
    Type: String

Conditions:
  Staging: !Equals [!Ref Environment, staging]
  Development: !Equals [!Ref Environment, development]
  Production: !Equals [!Ref Environment, production]
  CreateResource: !Or [!Equals [ !Ref Environment, production ], !Equals [ !Ref Environment, staging ]]
  
Resources:
  #LogGroups:
  AdminBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/codebuild/${ProjectName}-${Environment}-build-admin

  AppBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/codebuild/${ProjectName}-${Environment}-build-app

  APIBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/codebuild/${ProjectName}-${Environment}-build-api

  #BuildProjects:
  APICodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${ProjectName}-${Environment}-build-api"
      Description: !Sub "${ProjectName}-${Environment}-build-api"
      Source:
        BuildSpec: "buildspec.yml"
        InsecureSsl: false
        Type: "CODEPIPELINE"
      Artifacts:
        EncryptionDisabled: false
        Name: !Sub "${ProjectName}-build-api-${Environment}"
        Packaging: "NONE"
        Type: "CODEPIPELINE"
      Cache:
        Type: "NO_CACHE"
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        EnvironmentVariables:
        - Name: "ACCOUNT_ID"
          Type: "PLAINTEXT"
          Value: !Ref AWS::AccountId
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
        ImagePullCredentialsType: "CODEBUILD"
        PrivilegedMode: true
        Type: "LINUX_CONTAINER"
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/codebuild-${ProjectName}-build-api-service-role-${Environment}"
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      BadgeEnabled: false
      LogsConfig:
        CloudWatchLogs:
          Status: "ENABLED"
        S3Logs:
          Status: "DISABLED"
          EncryptionDisabled: false
      Visibility: "PRIVATE"

  AdminCodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${ProjectName}-${Environment}-build-admin"
      Description: !Sub "${Environment}-${Environment}-build-admin"
      Source:
        BuildSpec: "buildspec.yml"
        InsecureSsl: false
        Type: "CODEPIPELINE"
      Artifacts:
        EncryptionDisabled: false
        Name: !Sub "${ProjectName}-build-admin-${Environment}"
        Packaging: "NONE"
        Type: "CODEPIPELINE"
      Cache:
        Type: "NO_CACHE"
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        EnvironmentVariables:
        - Name: "ACCOUNT_ID"
          Type: "PLAINTEXT"
          Value: !Ref AWS::AccountId
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
        ImagePullCredentialsType: "CODEBUILD"
        PrivilegedMode: true
        Type: "LINUX_CONTAINER"
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/codebuild-${ProjectName}-build-admin-service-role-${Environment}"
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      BadgeEnabled: false
      LogsConfig:
        CloudWatchLogs:
          Status: "ENABLED"
        S3Logs:
          Status: "DISABLED"
          EncryptionDisabled: false
      Visibility: "PRIVATE"

  AppCodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${ProjectName}-${Environment}-build-app"
      Description: !Sub "${Environment}-${Environment}-build-app"
      Source:
        BuildSpec: "buildspec.yml"
        InsecureSsl: false
        Type: "CODEPIPELINE"
      Artifacts:
        EncryptionDisabled: false
        Name: !Sub "${ProjectName}-build-app-${Environment}"
        Packaging: "NONE"
        Type: "CODEPIPELINE"
      Cache:
        Type: "NO_CACHE"
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        EnvironmentVariables:
        - Name: "ACCOUNT_ID"
          Type: "PLAINTEXT"
          Value: !Ref AWS::AccountId
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
        ImagePullCredentialsType: "CODEBUILD"
        PrivilegedMode: true
        Type: "LINUX_CONTAINER"
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/codebuild-${ProjectName}-build-app-service-role-${Environment}"
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      BadgeEnabled: false
      LogsConfig:
        CloudWatchLogs:
          Status: "ENABLED"
        S3Logs:
          Status: "DISABLED"
          EncryptionDisabled: false
      Visibility: "PRIVATE"

  #CodePipelines:
  APICodePipelinePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub "${ProjectName}-api-${Environment}"
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/AWSCodePipelineServiceRole-${ProjectName}-api-${Environment}"
      ArtifactStore:
        Location: !Sub "codepipeline-${AWS::Region}-artifacts-${ProjectName}-${Environment}"
        Type: "S3"
      Stages:
      -
        Name: "Source"
        Actions:
        -
          Name: "Source"
          ActionTypeId:
            Category: "Source"
            Owner: "AWS"
            Provider: "CodeStarSourceConnection"
            Version: "1"
          Configuration:
            BranchName: 'main'
            ConnectionArn: !Sub arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/${CodeStarConnectionID}
            FullRepositoryId: "SaranNal/api"
            OutputArtifactFormat: "CODE_ZIP"
          OutputArtifacts:
          -
            Name: "SourceArtifact"
          Region: !Ref AWS::Region
          Namespace: "SourceVariables"
          RunOrder: 1
      -
        Name: "Build"
        Actions:
        -
          Name: "Build"
          ActionTypeId:
            Category: "Build"
            Owner: "AWS"
            Provider: "CodeBuild"
            Version: "1"
          Configuration:
            ProjectName: !Ref APICodeBuildProject
          InputArtifacts:
          -
            Name: "SourceArtifact"
          OutputArtifacts:
          -
            Name: "BuildArtifact"
          Region: !Ref AWS::Region
          Namespace: "BuildVariables"
          RunOrder: 1

  AdminCodePipelinePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub "${ProjectName}-admin-${Environment}"
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/AWSCodePipelineServiceRole-${ProjectName}-admin-${Environment}"
      ArtifactStore:
        Location: !Sub "codepipeline-${AWS::Region}-artifacts-${ProjectName}-${Environment}"
        Type: "S3"
      Stages:
      -
        Name: "Source"
        Actions:
        -
          Name: "Source"
          ActionTypeId:
            Category: "Source"
            Owner: "AWS"
            Provider: "CodeStarSourceConnection"
            Version: "1"
          Configuration:
            BranchName: 'main'
            ConnectionArn: !Sub arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/${CodeStarConnectionID}
            FullRepositoryId: "SaranNal/admin"
            OutputArtifactFormat: "CODE_ZIP"
          OutputArtifacts:
          -
            Name: "SourceArtifact"
          Region: !Ref AWS::Region
          Namespace: "SourceVariables"
          RunOrder: 1
      -
        Name: "Build"
        Actions:
        -
          Name: "Build"
          ActionTypeId:
            Category: "Build"
            Owner: "AWS"
            Provider: "CodeBuild"
            Version: "1"
          Configuration:
            ProjectName: !Ref AdminCodeBuildProject
          InputArtifacts:
          -
            Name: "SourceArtifact"
          OutputArtifacts:
          -
            Name: "BuildArtifact"
          Region: !Ref AWS::Region
          Namespace: "BuildVariables"
          RunOrder: 1

  AppCodePipelinePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub "${ProjectName}-app-${Environment}"
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/AWSCodePipelineServiceRole-${ProjectName}-app-${Environment}"
      ArtifactStore:
        Location: !Sub "codepipeline-${AWS::Region}-artifacts-${ProjectName}-${Environment}"
        Type: "S3"
      Stages:
      -
        Name: "Source"
        Actions:
        -
          Name: "Source"
          ActionTypeId:
            Category: "Source"
            Owner: "AWS"
            Provider: "CodeStarSourceConnection"
            Version: "1"
          Configuration:
            BranchName: 'main'
            ConnectionArn: !Sub arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/${CodeStarConnectionID}
            FullRepositoryId: "SaranNal/app"
            OutputArtifactFormat: "CODE_ZIP"
          OutputArtifacts:
          -
            Name: "SourceArtifact"
          Region: !Ref AWS::Region
          Namespace: "SourceVariables"
          RunOrder: 1
      -
        Name: "Build"
        Actions:
        -
          Name: "Build"
          ActionTypeId:
            Category: "Build"
            Owner: "AWS"
            Provider: "CodeBuild"
            Version: "1"
          Configuration:
            ProjectName: !Ref AppCodeBuildProject
          InputArtifacts:
          -
            Name: "SourceArtifact"
          OutputArtifacts:
          -
            Name: "BuildArtifact"
          Region: !Ref AWS::Region
          Namespace: "BuildVariables"
          RunOrder: 1

  FinalCodePipelinePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub "${ProjectName}-${Environment}"
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/AWSCodePipelineServiceRole-${ProjectName}-${Environment}"
      ArtifactStore:
        Location: !Sub "codepipeline-${AWS::Region}-artifacts-${ProjectName}-${Environment}"
        Type: "S3"
      Stages:
      -
        Name: "Source"
        Actions:
        -
          Name: "Source"
          ActionTypeId:
            Category: "Source"
            Owner: "AWS"
            Provider: "S3"
            Version: "1"
          Configuration:
            PollForSourceChanges: "false"
            S3Bucket: !Sub "${ProjectName}-combined-pipeline-artifact-${Environment}"
            S3ObjectKey: !Sub "imagedefinitions.json"
          OutputArtifacts:
          -
            Name: "SourceArtifact"
          Region: !Ref AWS::Region
          Namespace: "SourceVariables"
          RunOrder: 1
      -
        Name: "createDeploymentArtifact"
        Actions:
        -
          Name: "createDeploymentArtifact"
          ActionTypeId:
            Category: "Invoke"
            Owner: "AWS"
            Provider: "Lambda"
            Version: "1"
          Configuration:
            FunctionName: !Sub "buildArtifactsForIntegratedPipeline"
            UserParameters: !Sub "${Environment}"
          InputArtifacts:
          -
            Name: "SourceArtifact"
          OutputArtifacts:
          -
            Name: "DeploymentArtifact"
          Region: !Ref AWS::Region
          RunOrder: 1
      -
        Name: "Deploy"
        Actions:
        -
          Name: "Deploy"
          ActionTypeId:
            Category: "Deploy"
            Owner: "AWS"
            Provider: "CodeDeployToECS"
            Version: "1"
          Configuration:
            AppSpecTemplateArtifact: "DeploymentArtifact"
            AppSpecTemplatePath: "appspec.json"
            ApplicationName: !Sub "AppECS-${ProjectName}-${Environment}"
            DeploymentGroupName: !Sub "DgpECS-${ProjectName}-${Environment}"
            TaskDefinitionTemplateArtifact: "DeploymentArtifact"
            TaskDefinitionTemplatePath: "taskdef.json"
          InputArtifacts:
          -
            Name: "DeploymentArtifact"
          Region: !Ref AWS::Region
          Namespace: "DeployVariables"
          RunOrder: 1

  # PipelineNotificationRule
  APICodePipelinePipelinenotification:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      Name: !Sub "${ProjectName}-api-notification-${Environment}"
      DetailType: FULL
      Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectName}-api-${Environment}"
      EventTypeIds:
        - codepipeline-pipeline-pipeline-execution-failed
        - codepipeline-pipeline-pipeline-execution-canceled
        - codepipeline-pipeline-pipeline-execution-started
        - codepipeline-pipeline-pipeline-execution-succeeded
      Targets:
        - TargetType: SNS
          TargetAddress: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${ProjectName}-${Environment}-notifyCodepipelineEventToTeams"

  AdminCodePipelinePipelinenotification:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      Name: !Sub "${ProjectName}-admin-notification-${Environment}"
      DetailType: FULL
      Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectName}-admin-${Environment}"
      EventTypeIds:
        - codepipeline-pipeline-pipeline-execution-failed
        - codepipeline-pipeline-pipeline-execution-canceled
        - codepipeline-pipeline-pipeline-execution-started
        - codepipeline-pipeline-pipeline-execution-succeeded
      Targets:
        - TargetType: SNS
          TargetAddress: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${ProjectName}-${Environment}-notifyCodepipelineEventToTeams"

  AppCodePipelinePipelinenotification:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      Name: !Sub "${ProjectName}-app-notification-${Environment}"
      DetailType: FULL
      Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectName}-app-${Environment}"
      EventTypeIds:
        - codepipeline-pipeline-pipeline-execution-failed
        - codepipeline-pipeline-pipeline-execution-canceled
        - codepipeline-pipeline-pipeline-execution-started
        - codepipeline-pipeline-pipeline-execution-succeeded
      Targets:
        - TargetType: SNS
          TargetAddress: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${ProjectName}-${Environment}-notifyCodepipelineEventToTeams"
